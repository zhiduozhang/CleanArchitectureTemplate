name: Build & Deploy
on:
  push:
    branches: [ main ]

env:
  as-name: "as-cast"
  rg-name: "rg-cast"

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: postgres
          POSTGRES_DB: securetary
        options: >-
          --health-cmd pg_isready   
          --health-interval 10s 
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.x'
          include-prerelease: true
      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore --configuration Release
      - name: Test
        run: >-
          dotnet test --no-build --configuration Release --filter
          "FullyQualifiedName!~AcceptanceTests"
        env:
          ConnectionStrings__DefaultConnection: >-
            Server=localhost;Port=5432;Database=postgres;User Id=postgres;Password=postgres;
      - name: Publish
        run: dotnet publish src/WebUI/WebUI.csproj --configuration Release --output website
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          name: website
          path: /home/runner/work/CleanArchitectureTemplate/CleanArchitectureTemplate/website/**
          if-no-files-found: error

  deploy-staging:
    needs: build
    
    runs-on: ubuntu-latest

    environment:
      name: staging
      url: ${{ steps.deploywebapp.outputs.webapp-url }}
    
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.0.8
      with:
        name: website
        path: website

    - name: Login via Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy web app
      id: deploywebapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.as-name }}
        slot-name: staging
        package: website

    - name: Logout via Azure CLI
      run: az logout

  deploy-prod:
    needs: deploy-staging

    runs-on: ubuntu-latest

    environment:
      name: prod
      url: ${{ steps.slot_swap.outputs.url }}

    steps:
    - name: Login via Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Swap Staging and Prod
      id: slot_swap
      run: |
        az webapp deployment slot swap -g ${{ env.rg-name }} -n ${{ env.as-name }} -s staging
        url=$(az webapp show -g ${{ env.rg-name }} -n ${{ env.as-name }} --query "defaultHostName" -o tsv)
        echo "::set-output name=url::https://$url"

    - name: Logout via Azure CLI
      run: az logout
